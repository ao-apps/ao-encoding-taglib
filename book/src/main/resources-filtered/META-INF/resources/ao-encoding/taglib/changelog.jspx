<?xml version="1.0" encoding="UTF-8"?>
<!--
ao-encoding-taglib - High performance streaming character encoding in a JSP environment.
Copyright (C) 2016, 2017, 2019, 2020  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of ao-encoding-taglib.

ao-encoding-taglib is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ao-encoding-taglib is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with ao-encoding-taglib.  If not, see <http://www.gnu.org/licenses />.
-->
<jsp:root
	xmlns:ao="https://aoindustries.com/ao-taglib/"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:changelog="https://semanticcms.com/changelog/taglib/"
	xmlns:core="https://semanticcms.com/core/taglib/"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:jsp="http://java.sun.com/JSP/Page"
	version="2.1"
>
	<jsp:directive.page language="java" pageEncoding="UTF-8" />
	<jsp:directive.page session="false" />
	<core:page
		title="@{documented.name} Changelog"
		shortTitle="Changelog"
		tocLevels="1"
		datePublished="2020-11-18T11:39:31-06:00"
		dateModified="2020-12-13T02:13:30-06:00"
	>
		<c:if test="${fn:endsWith('@{project.version}', '-SNAPSHOT') and !fn:endsWith('@{project.version}', '-POST-SNAPSHOT')}">
			<changelog:release
				projectName="@{documented.name}"
				version="@{project.version}"
				groupId="@{project.groupId}"
				artifactId="@{documented.artifactId}"
				scmUrl="@{project.scm.url}"
			/>
		</c:if>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.2"
			datePublished="2020-12-13T02:13:30-06:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>
					Split development-only classes into a new sub-project in <code>devel/</code>.  This
					sub-project is used development only and is never deployed to artifact repositories.
				</li>
				<li>Updated dependencies.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.1"
			datePublished="2020-11-24T22:06:06-06:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>Attribute setters now throw <code>IllegalArgumentException</code> instead of <code>JspTagException</code>.</li>
			</ul>
		</changelog:release>

		<changelog:release
			projectName="@{documented.name}"
			version="1.0.0"
			datePublished="2020-11-24T21:32:41-06:00"
			groupId="@{project.groupId}"
			artifactId="@{documented.artifactId}"
			scmUrl="@{project.scm.url}"
		>
			<ul>
				<li>New project for character encoding in JSP split from <core:link book="/ao-taglib" page="/index.jspx" />.</li>
				<li>
					Added <core:link page="ao-encoding-legacy.tld/">alternate implementation</core:link> compatible
					with legacy JSP that use scriptlets.
				</li>
				<li>
					Added tags to fill-out all the currently supported media types:
					<ol>
						<li><core:link page="ao-encoding.tld/tag-javascript" /></li>
						<li><core:link page="ao-encoding.tld/tag-json" /></li>
						<li><core:link page="ao-encoding.tld/tag-ldJson" /></li>
						<li><core:link page="ao-encoding.tld/tag-url" /></li>
					</ol>
				</li>
				<li>
					<p>
						Now registering exception types for use with <code>Throwables.newSurrogate(â€¦)</code> that supports creating new instances
						of throwables in order to have caller stack trace.  When wrapped, the original throwable is the
						cause of the new throwable.  When not wrapped, the original throwable is used directly and
						caller stack trace is lost.
					</p>
					<p>
						This is used to maintain exception types and states across thread boundaries, such as when an exception cause
						is obtained from an <code>ExecutionException</code>.
					</p>
				</li>
				<li>New tag <core:link page="ao-encoding.tld/tag-encoding" /> that has a type defined in its type attribute.</li>
				<li>
					<code>EncodingNullTag</code> now sets <code>MediaType.TEXT</code> context before invoking the
					JSP body.  This means nested tags that attempt to produce valid output will not be limited by the
					parent encoding context of the tag.
				</li>
				<li>
					Cleaned-up use of <code>JspTagException</code> versus <code>JspException</code>.  Generally,
					methods declare <code>throws JspException</code> while actually throwing instances of
					<code>JspTagException</code>.  The exceptions to this are attribute setters and private
					implementation methods that both declare and throw <code>JspTagException</code>.
				</li>
			</ul>
		</changelog:release>
	</core:page>
</jsp:root>
